// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "genom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace GenomEvaluation {
class GenomDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Genom>
     _instance;
} _Genom_default_instance_;
class IndividualDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Individual>
     _instance;
} _Individual_default_instance_;
class GenerationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Generation>
     _instance;
} _Generation_default_instance_;

namespace protobuf_genom_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Genom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Genom, gene_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Individual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Individual, genom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Individual, evaluation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Generation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Generation, individuals_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Genom)},
  { 6, -1, sizeof(Individual)},
  { 13, -1, sizeof(Generation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Genom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Individual_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Generation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "genom.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Genom_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Genom_default_instance_);_Individual_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Individual_default_instance_);_Generation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Generation_default_instance_);_Individual_default_instance_._instance.get_mutable()->genom_ = const_cast< ::GenomEvaluation::Genom*>(
      ::GenomEvaluation::Genom::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013genom.proto\022\017GenomEvaluation\"\031\n\005Genom\022"
      "\020\n\004gene\030\001 \003(\002B\002\020\001\"G\n\nIndividual\022%\n\005genom"
      "\030\001 \001(\0132\026.GenomEvaluation.Genom\022\022\n\nevalua"
      "tion\030\002 \001(\002\">\n\nGeneration\0220\n\013individuals\030"
      "\001 \003(\0132\033.GenomEvaluation.Individual2Y\n\017Ge"
      "nomEvaluation\022F\n\rGetIndividual\022\026.GenomEv"
      "aluation.Genom\032\033.GenomEvaluation.Individ"
      "ual\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "genom.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_genom_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Genom::kGeneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Genom::Genom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_genom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GenomEvaluation.Genom)
}
Genom::Genom(const Genom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gene_(from.gene_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GenomEvaluation.Genom)
}

void Genom::SharedCtor() {
  _cached_size_ = 0;
}

Genom::~Genom() {
  // @@protoc_insertion_point(destructor:GenomEvaluation.Genom)
  SharedDtor();
}

void Genom::SharedDtor() {
}

void Genom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Genom::descriptor() {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Genom& Genom::default_instance() {
  protobuf_genom_2eproto::InitDefaults();
  return *internal_default_instance();
}

Genom* Genom::New(::google::protobuf::Arena* arena) const {
  Genom* n = new Genom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Genom::Clear() {
// @@protoc_insertion_point(message_clear_start:GenomEvaluation.Genom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gene_.Clear();
  _internal_metadata_.Clear();
}

bool Genom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GenomEvaluation.Genom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float gene = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_gene())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_gene())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GenomEvaluation.Genom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GenomEvaluation.Genom)
  return false;
#undef DO_
}

void Genom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GenomEvaluation.Genom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float gene = 1 [packed = true];
  if (this->gene_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gene_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->gene().data(), this->gene_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GenomEvaluation.Genom)
}

::google::protobuf::uint8* Genom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GenomEvaluation.Genom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float gene = 1 [packed = true];
  if (this->gene_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _gene_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->gene_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GenomEvaluation.Genom)
  return target;
}

size_t Genom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GenomEvaluation.Genom)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float gene = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->gene_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gene_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Genom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GenomEvaluation.Genom)
  GOOGLE_DCHECK_NE(&from, this);
  const Genom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Genom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GenomEvaluation.Genom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GenomEvaluation.Genom)
    MergeFrom(*source);
  }
}

void Genom::MergeFrom(const Genom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GenomEvaluation.Genom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gene_.MergeFrom(from.gene_);
}

void Genom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GenomEvaluation.Genom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Genom::CopyFrom(const Genom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GenomEvaluation.Genom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Genom::IsInitialized() const {
  return true;
}

void Genom::Swap(Genom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Genom::InternalSwap(Genom* other) {
  using std::swap;
  gene_.InternalSwap(&other->gene_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Genom::GetMetadata() const {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Genom

// repeated float gene = 1 [packed = true];
int Genom::gene_size() const {
  return gene_.size();
}
void Genom::clear_gene() {
  gene_.Clear();
}
float Genom::gene(int index) const {
  // @@protoc_insertion_point(field_get:GenomEvaluation.Genom.gene)
  return gene_.Get(index);
}
void Genom::set_gene(int index, float value) {
  gene_.Set(index, value);
  // @@protoc_insertion_point(field_set:GenomEvaluation.Genom.gene)
}
void Genom::add_gene(float value) {
  gene_.Add(value);
  // @@protoc_insertion_point(field_add:GenomEvaluation.Genom.gene)
}
const ::google::protobuf::RepeatedField< float >&
Genom::gene() const {
  // @@protoc_insertion_point(field_list:GenomEvaluation.Genom.gene)
  return gene_;
}
::google::protobuf::RepeatedField< float >*
Genom::mutable_gene() {
  // @@protoc_insertion_point(field_mutable_list:GenomEvaluation.Genom.gene)
  return &gene_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Individual::kGenomFieldNumber;
const int Individual::kEvaluationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Individual::Individual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_genom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GenomEvaluation.Individual)
}
Individual::Individual(const Individual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_genom()) {
    genom_ = new ::GenomEvaluation::Genom(*from.genom_);
  } else {
    genom_ = NULL;
  }
  evaluation_ = from.evaluation_;
  // @@protoc_insertion_point(copy_constructor:GenomEvaluation.Individual)
}

void Individual::SharedCtor() {
  ::memset(&genom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evaluation_) -
      reinterpret_cast<char*>(&genom_)) + sizeof(evaluation_));
  _cached_size_ = 0;
}

Individual::~Individual() {
  // @@protoc_insertion_point(destructor:GenomEvaluation.Individual)
  SharedDtor();
}

void Individual::SharedDtor() {
  if (this != internal_default_instance()) delete genom_;
}

void Individual::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Individual::descriptor() {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Individual& Individual::default_instance() {
  protobuf_genom_2eproto::InitDefaults();
  return *internal_default_instance();
}

Individual* Individual::New(::google::protobuf::Arena* arena) const {
  Individual* n = new Individual;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Individual::Clear() {
// @@protoc_insertion_point(message_clear_start:GenomEvaluation.Individual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && genom_ != NULL) {
    delete genom_;
  }
  genom_ = NULL;
  evaluation_ = 0;
  _internal_metadata_.Clear();
}

bool Individual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GenomEvaluation.Individual)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GenomEvaluation.Genom genom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_genom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float evaluation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &evaluation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GenomEvaluation.Individual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GenomEvaluation.Individual)
  return false;
#undef DO_
}

void Individual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GenomEvaluation.Individual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GenomEvaluation.Genom genom = 1;
  if (this->has_genom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->genom_, output);
  }

  // float evaluation = 2;
  if (this->evaluation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->evaluation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GenomEvaluation.Individual)
}

::google::protobuf::uint8* Individual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GenomEvaluation.Individual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GenomEvaluation.Genom genom = 1;
  if (this->has_genom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->genom_, deterministic, target);
  }

  // float evaluation = 2;
  if (this->evaluation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->evaluation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GenomEvaluation.Individual)
  return target;
}

size_t Individual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GenomEvaluation.Individual)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GenomEvaluation.Genom genom = 1;
  if (this->has_genom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->genom_);
  }

  // float evaluation = 2;
  if (this->evaluation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Individual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GenomEvaluation.Individual)
  GOOGLE_DCHECK_NE(&from, this);
  const Individual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Individual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GenomEvaluation.Individual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GenomEvaluation.Individual)
    MergeFrom(*source);
  }
}

void Individual::MergeFrom(const Individual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GenomEvaluation.Individual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_genom()) {
    mutable_genom()->::GenomEvaluation::Genom::MergeFrom(from.genom());
  }
  if (from.evaluation() != 0) {
    set_evaluation(from.evaluation());
  }
}

void Individual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GenomEvaluation.Individual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Individual::CopyFrom(const Individual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GenomEvaluation.Individual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Individual::IsInitialized() const {
  return true;
}

void Individual::Swap(Individual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Individual::InternalSwap(Individual* other) {
  using std::swap;
  swap(genom_, other->genom_);
  swap(evaluation_, other->evaluation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Individual::GetMetadata() const {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Individual

// .GenomEvaluation.Genom genom = 1;
bool Individual::has_genom() const {
  return this != internal_default_instance() && genom_ != NULL;
}
void Individual::clear_genom() {
  if (GetArenaNoVirtual() == NULL && genom_ != NULL) delete genom_;
  genom_ = NULL;
}
const ::GenomEvaluation::Genom& Individual::genom() const {
  const ::GenomEvaluation::Genom* p = genom_;
  // @@protoc_insertion_point(field_get:GenomEvaluation.Individual.genom)
  return p != NULL ? *p : *reinterpret_cast<const ::GenomEvaluation::Genom*>(
      &::GenomEvaluation::_Genom_default_instance_);
}
::GenomEvaluation::Genom* Individual::mutable_genom() {
  
  if (genom_ == NULL) {
    genom_ = new ::GenomEvaluation::Genom;
  }
  // @@protoc_insertion_point(field_mutable:GenomEvaluation.Individual.genom)
  return genom_;
}
::GenomEvaluation::Genom* Individual::release_genom() {
  // @@protoc_insertion_point(field_release:GenomEvaluation.Individual.genom)
  
  ::GenomEvaluation::Genom* temp = genom_;
  genom_ = NULL;
  return temp;
}
void Individual::set_allocated_genom(::GenomEvaluation::Genom* genom) {
  delete genom_;
  genom_ = genom;
  if (genom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GenomEvaluation.Individual.genom)
}

// float evaluation = 2;
void Individual::clear_evaluation() {
  evaluation_ = 0;
}
float Individual::evaluation() const {
  // @@protoc_insertion_point(field_get:GenomEvaluation.Individual.evaluation)
  return evaluation_;
}
void Individual::set_evaluation(float value) {
  
  evaluation_ = value;
  // @@protoc_insertion_point(field_set:GenomEvaluation.Individual.evaluation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Generation::kIndividualsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Generation::Generation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_genom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GenomEvaluation.Generation)
}
Generation::Generation(const Generation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      individuals_(from.individuals_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GenomEvaluation.Generation)
}

void Generation::SharedCtor() {
  _cached_size_ = 0;
}

Generation::~Generation() {
  // @@protoc_insertion_point(destructor:GenomEvaluation.Generation)
  SharedDtor();
}

void Generation::SharedDtor() {
}

void Generation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Generation::descriptor() {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Generation& Generation::default_instance() {
  protobuf_genom_2eproto::InitDefaults();
  return *internal_default_instance();
}

Generation* Generation::New(::google::protobuf::Arena* arena) const {
  Generation* n = new Generation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Generation::Clear() {
// @@protoc_insertion_point(message_clear_start:GenomEvaluation.Generation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  individuals_.Clear();
  _internal_metadata_.Clear();
}

bool Generation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GenomEvaluation.Generation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GenomEvaluation.Individual individuals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_individuals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GenomEvaluation.Generation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GenomEvaluation.Generation)
  return false;
#undef DO_
}

void Generation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GenomEvaluation.Generation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GenomEvaluation.Individual individuals = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->individuals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->individuals(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GenomEvaluation.Generation)
}

::google::protobuf::uint8* Generation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GenomEvaluation.Generation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GenomEvaluation.Individual individuals = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->individuals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->individuals(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GenomEvaluation.Generation)
  return target;
}

size_t Generation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GenomEvaluation.Generation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GenomEvaluation.Individual individuals = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->individuals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->individuals(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Generation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GenomEvaluation.Generation)
  GOOGLE_DCHECK_NE(&from, this);
  const Generation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Generation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GenomEvaluation.Generation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GenomEvaluation.Generation)
    MergeFrom(*source);
  }
}

void Generation::MergeFrom(const Generation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GenomEvaluation.Generation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  individuals_.MergeFrom(from.individuals_);
}

void Generation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GenomEvaluation.Generation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Generation::CopyFrom(const Generation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GenomEvaluation.Generation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Generation::IsInitialized() const {
  return true;
}

void Generation::Swap(Generation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Generation::InternalSwap(Generation* other) {
  using std::swap;
  individuals_.InternalSwap(&other->individuals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Generation::GetMetadata() const {
  protobuf_genom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_genom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Generation

// repeated .GenomEvaluation.Individual individuals = 1;
int Generation::individuals_size() const {
  return individuals_.size();
}
void Generation::clear_individuals() {
  individuals_.Clear();
}
const ::GenomEvaluation::Individual& Generation::individuals(int index) const {
  // @@protoc_insertion_point(field_get:GenomEvaluation.Generation.individuals)
  return individuals_.Get(index);
}
::GenomEvaluation::Individual* Generation::mutable_individuals(int index) {
  // @@protoc_insertion_point(field_mutable:GenomEvaluation.Generation.individuals)
  return individuals_.Mutable(index);
}
::GenomEvaluation::Individual* Generation::add_individuals() {
  // @@protoc_insertion_point(field_add:GenomEvaluation.Generation.individuals)
  return individuals_.Add();
}
::google::protobuf::RepeatedPtrField< ::GenomEvaluation::Individual >*
Generation::mutable_individuals() {
  // @@protoc_insertion_point(field_mutable_list:GenomEvaluation.Generation.individuals)
  return &individuals_;
}
const ::google::protobuf::RepeatedPtrField< ::GenomEvaluation::Individual >&
Generation::individuals() const {
  // @@protoc_insertion_point(field_list:GenomEvaluation.Generation.individuals)
  return individuals_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace GenomEvaluation

// @@protoc_insertion_point(global_scope)
